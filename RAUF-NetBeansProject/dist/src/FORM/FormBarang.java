/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package FORM;
import ClassDatabase.ClassDatabase;
//import com.mysql.cj.jdbc.PreparedStatementWrapper;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
//import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author alfar
 */
public class FormBarang extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormEntriMaster
     */
    public FormBarang() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        kodeBarangTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        namaTF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        hargaBeliTF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        hargaJualTF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        stokTF = new javax.swing.JTextField();
        caridataBT = new javax.swing.JButton();
        caridataTF = new javax.swing.JTextField();
        addBT = new javax.swing.JButton();
        saveBT = new javax.swing.JButton();
        editBT = new javax.swing.JButton();
        deleteBT = new javax.swing.JButton();
        closeBT = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBarang = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 51, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("FORM ENTRI DATA MASTER BARANG");

        jLabel2.setText("Kode Barang");

        kodeBarangTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                kodeBarangTFCaretUpdate(evt);
            }
        });

        jLabel3.setText("Nama Barang");

        jLabel8.setText("Harga Beli");

        jLabel9.setText("Harga Jual");

        jLabel10.setText("Stok");

        caridataBT.setText("Tampilkan");

        caridataTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                caridataTFKeyPressed(evt);
            }
        });

        addBT.setText("Add");
        addBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTActionPerformed(evt);
            }
        });

        saveBT.setText("Save");
        saveBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBTActionPerformed(evt);
            }
        });

        editBT.setText("Edit");
        editBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBTActionPerformed(evt);
            }
        });

        deleteBT.setText("Delete");
        deleteBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTActionPerformed(evt);
            }
        });

        closeBT.setText("Close");
        closeBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBTActionPerformed(evt);
            }
        });

        tblBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Barang", "Nama Barang", "Harga Beli", "Harga Jual", "Stok"
            }
        ));
        jScrollPane1.setViewportView(tblBarang);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(kodeBarangTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(namaTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hargaBeliTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(stokTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hargaJualTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(closeBT, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(caridataBT)
                        .addGap(18, 18, 18)
                        .addComponent(caridataTF, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(kodeBarangTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(namaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hargaBeliTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(hargaJualTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(stokTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addBT)
                        .addGap(18, 18, 18)
                        .addComponent(saveBT)
                        .addGap(18, 18, 18)
                        .addComponent(editBT)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBT)
                        .addGap(18, 18, 18)
                        .addComponent(closeBT)))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caridataBT)
                    .addComponent(caridataTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kodeBarangTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_kodeBarangTFCaretUpdate
        try {
            Connection c=ClassDatabase.getkoneksi();
            Statement s=c.createStatement();
            String sql="SELECT * FROM barang WHERE kode_barang='" + this.kodeBarangTF.getText() + "'";
            ResultSet r=s.executeQuery(sql);
            while (r.next()) {
                this.namaTF.setText(r.getString(2));
                this.hargaBeliTF.setText(r.getString("harga_beli"));
                this.hargaJualTF.setText(r.getString("harga_jual"));
                this.stokTF.setText(r.getString("stok"));
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            System.out.println("Terjadi kesalahan" + e);
        }
    }//GEN-LAST:event_kodeBarangTFCaretUpdate

    private void caridataTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_caridataTFKeyPressed
        DefaultTableModel tableTampil1 = new DefaultTableModel();
        tableTampil1.addColumn("kode_barang");
        tableTampil1.addColumn("nama");
        tableTampil1.addColumn("harga_beli");
        tableTampil1.addColumn("harga_jual");
        tableTampil1.addColumn("stok");

        try {
            Connection c=ClassDatabase.getkoneksi();
            Statement s=c.createStatement();
            String sql = "SELECT * FROM barang WHERE kode_barang LIKE '%" + caridataTF.getText() + "%'" +
            "OR nama LIKE '%" + caridataTF.getText() + "%'" + "OR harga_beli LIKE '%" + caridataTF.getText() + "%'" +
            "OR harga_jual LIKE '%" + caridataTF.getText() + "%'" + "OR stok LIKE '%" + caridataTF.getText() + "%'";
            ResultSet r=s.executeQuery(sql);
            while (r.next()) {
                tableTampil1.addRow(new Object[] {
                    r.getString(1),
                    r.getString(2),
                    r.getString(3),
                    r.getString(4),
                    r.getString(5),
                });}
                tblBarang.setModel(tableTampil1);
            } catch (Exception e) {
            }
    }//GEN-LAST:event_caridataTFKeyPressed

    private void addBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTActionPerformed
        kodeBarangTF.setText("");
        namaTF.setText("");
        hargaBeliTF.setText("");
        hargaJualTF.setText("");
        stokTF.setText("");
        kodeBarangTF.requestFocus();
    }//GEN-LAST:event_addBTActionPerformed

    private void saveBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBTActionPerformed
        int saham=0;
        String kode_barang=this.kodeBarangTF.getText();
        String nama=this.namaTF.getText();
        int hargabeli=Integer.parseInt(hargaBeliTF.getText());
        String hargajual=this.hargaJualTF.getText();
        int stok=Integer.parseInt(stokTF.getText());
        
        saham = stok * hargabeli;
        
        String hargabeli1 = this.hargaBeliTF.getText();
        String stok1 = this.stokTF.getText();
        String saham1 = Integer.toString(saham);
        
        if (kodeBarangTF.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Kode Barang Tidak Boleh Kosong");
        }
        else{
            if (namaTF.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Nama Barang Tidak Boleh Kosong");
            }
            else {
                if (hargaBeliTF.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Harga Beli Tidak Boleh Kosong");
                }
                else {
                    if (hargaJualTF.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Harga Jual Tidak Boleh Kosong");
                    }
                    else {
                        if (stokTF.getText().isEmpty()) {
                            JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Stok Tidak Boleh Kosong");
                        }
                        else {
                            try {
                                Connection c = ClassDatabase.getkoneksi();
                                String sql = "INSERT INTO barang VALUES (?,?,?,?,?,?)";
                                PreparedStatement p =(PreparedStatement) c.prepareStatement(sql);
                                p.setString(1, kode_barang);
                                p.setString(2, nama);
                                p.setString(3, hargabeli1);
                                p.setString(4, hargajual);
                                p.setString(5, stok1);
                                p.setString(6, saham1);
                                p.executeUpdate();
                                p.close();
                                JOptionPane.showMessageDialog(this, "Sukses Tambah Data");
                            } catch (Exception e) {
                                System.out.println(e);
                            } finally {
                            }}}}}}
                            try {
                                Connection c = ClassDatabase.getkoneksi();
                                Statement s = c.createStatement();
                                String sql = "SELECT kode_barang, nama, harga_beli, harga_jual, stok FROM barang";
                                ResultSet r = s.executeQuery(sql);
                                tblBarang.setModel(DbUtils.resultSetToTableModel(r));
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);
                            }
    }//GEN-LAST:event_saveBTActionPerformed

    private void editBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBTActionPerformed
        //EDIT
        String kode_barang=this.kodeBarangTF.getText();
        String nama=this.namaTF.getText();
        String hargabeli=this.hargaBeliTF.getText();
        String hargajual=this.hargaJualTF.getText();
        String stok=this.stokTF.getText();
        if (kodeBarangTF.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Kode Barang Tidak Boleh Kosong");
        }
        else {
            if (namaTF.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Nama Barang Tidak Boleh Kosong");
            }
            else {
                if (hargaBeliTF.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Harga Beli Tidak Boleh Kosong");
                }
                else {
                    if (hargaJualTF.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Harga Jual Tidak Boleh Kosong");
                    }
                    else {
                        if (stokTF.getText().isEmpty()) {
                            JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Stok Tidak Boleh Kosong");
                        }
                        else {
                            try {
                                Connection c=ClassDatabase.getkoneksi();
                                String sql="UPDATE `rauf`.`barang` SET `nama`=?,`harga_beli`=?,`harga_jual`=?,`stok`=? WHERE `kode_barang`=?";
                                PreparedStatement p=(PreparedStatement) c.prepareStatement(sql);
                                p.setString(5, kode_barang);
                                p.setString(1, nama);
                                p.setString(2, hargabeli);
                                p.setString(3, hargajual);
                                p.setString(4, stok);
                                p.executeUpdate();
                                p.close();
                                JOptionPane.showMessageDialog(this, "Sukses Update Data");
                            } catch (SQLException e) {
                                System.out.println(e);
                            }finally{
                            }}}}}}
                            try {
                                Connection c=ClassDatabase.getkoneksi();
                                Statement s=c.createStatement();
                                String sql="SELECT kode_barang, nama, harga_beli, harga_jual, stok FROM barang";
                                ResultSet r=s.executeQuery(sql);
                                tblBarang.setModel(DbUtils.resultSetToTableModel(r));
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog( null, e);
                            }
    }//GEN-LAST:event_editBTActionPerformed

    private void deleteBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTActionPerformed
        //DELETE
        String kode_barang=this.kodeBarangTF.getText();

        try {
            Connection c=ClassDatabase.getkoneksi();
            String sql = "DELETE FROM barang WHERE kode_barang=?";
            PreparedStatement p=(PreparedStatement) c.prepareStatement(sql);
            p.setString(1, kode_barang);

            p.executeUpdate();
            p.close();
            JOptionPane.showMessageDialog(this, "Sukses Hapus Data");
        } catch (SQLException e) {
            System.out.println(e);
        }  finally {

        }
        try {
            Connection c=ClassDatabase.getkoneksi();
            Statement s=c.createStatement();
            String sql="SELECT kode_barang, nama, harga_beli, harga_jual, stok FROM barang";
            ResultSet r=s.executeQuery(sql);
            tblBarang.setModel(DbUtils.resultSetToTableModel(r));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteBTActionPerformed

    private void closeBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBTActionPerformed
        int ex = JOptionPane.showConfirmDialog(null, "Apakah anda akan keluar?", "Anda yakin?", JOptionPane.YES_NO_OPTION);
        if (ex == 0){
            dispose();
        }
    }//GEN-LAST:event_closeBTActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBT;
    private javax.swing.JButton caridataBT;
    private javax.swing.JTextField caridataTF;
    private javax.swing.JButton closeBT;
    private javax.swing.JButton deleteBT;
    private javax.swing.JButton editBT;
    private javax.swing.JTextField hargaBeliTF;
    private javax.swing.JTextField hargaJualTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kodeBarangTF;
    private javax.swing.JTextField namaTF;
    private javax.swing.JButton saveBT;
    private javax.swing.JTextField stokTF;
    private javax.swing.JTable tblBarang;
    // End of variables declaration//GEN-END:variables
}
