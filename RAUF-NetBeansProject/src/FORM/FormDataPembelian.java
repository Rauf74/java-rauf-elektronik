/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package FORM;
import ClassDatabase.ClassDatabase;
//import com.mysql.cj.jdbc.PreparedStatementWrapper;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
//import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author alfar
 */
public class FormDataPembelian extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormPembelianBarang
     */
    public FormDataPembelian() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IDTF = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        kodeBarangTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        caridataBT = new javax.swing.JButton();
        tampilkanTF = new javax.swing.JTextField();
        addBT = new javax.swing.JButton();
        saveBT = new javax.swing.JButton();
        editBT = new javax.swing.JButton();
        deleteBT = new javax.swing.JButton();
        closeBT = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAcc = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        noBeliTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jumlahBeliTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tglBeliTF = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        kodeSupplierTF = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        totalStokTF = new javax.swing.JTextField();
        hargaBeliTF = new javax.swing.JTextField();
        namaBarangTF = new javax.swing.JTextField();
        hargaJualTF = new javax.swing.JTextField();
        namaSupplierTF = new javax.swing.JTextField();

        IDTF.setText("jTextField1");

        jPanel1.setBackground(new java.awt.Color(255, 51, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("FORM ENTRI DATA PEMBELIAN ACC");

        jLabel2.setText("Kode Barang");

        kodeBarangTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                kodeBarangTFCaretUpdate(evt);
            }
        });

        jLabel3.setText("Nama Barang");

        jLabel8.setText("Harga Beli");

        jLabel9.setText("Harga Jual");

        jLabel10.setText("Total Stok");

        caridataBT.setText("Tampilkan");
        caridataBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caridataBTActionPerformed(evt);
            }
        });

        tampilkanTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tampilkanTFKeyPressed(evt);
            }
        });

        addBT.setText("Add");
        addBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTActionPerformed(evt);
            }
        });

        saveBT.setText("Save");
        saveBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBTActionPerformed(evt);
            }
        });

        editBT.setText("Edit");
        editBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBTActionPerformed(evt);
            }
        });

        deleteBT.setText("Delete");
        deleteBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTActionPerformed(evt);
            }
        });

        closeBT.setText("Close");
        closeBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBTActionPerformed(evt);
            }
        });

        tblAcc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nomor Beli", "Kode Barang", "Jumlah Beli", "Tanggal Beli", "Kode Supplier"
            }
        ));
        jScrollPane1.setViewportView(tblAcc);

        jLabel4.setText("No. Pembelian");

        noBeliTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                noBeliTFCaretUpdate(evt);
            }
        });

        jLabel5.setText("Jumlah Beli");

        jLabel6.setText("Tanggal Pembelian");

        jLabel7.setText("Kode Supplier");

        kodeSupplierTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                kodeSupplierTFCaretUpdate(evt);
            }
        });

        jLabel11.setText("Nama Supplier");

        totalStokTF.setEditable(false);

        hargaBeliTF.setEditable(false);

        namaBarangTF.setEditable(false);

        hargaJualTF.setEditable(false);

        namaSupplierTF.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(noBeliTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(kodeBarangTF, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(hargaBeliTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(namaBarangTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(109, 109, 109)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)))
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jumlahBeliTF)
                            .addComponent(tglBeliTF, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(totalStokTF)
                            .addComponent(hargaJualTF, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                        .addGap(102, 102, 102)
                        .addComponent(caridataBT)
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(kodeSupplierTF, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(tampilkanTF)
                            .addComponent(namaSupplierTF, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(closeBT, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jumlahBeliTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(tglBeliTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addBT)
                        .addGap(18, 18, 18)
                        .addComponent(saveBT)
                        .addGap(18, 18, 18)
                        .addComponent(editBT)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBT)
                        .addGap(18, 18, 18)
                        .addComponent(closeBT))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(noBeliTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(kodeBarangTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(kodeSupplierTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(namaBarangTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(hargaBeliTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(namaSupplierTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(hargaJualTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(caridataBT)
                            .addComponent(tampilkanTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalStokTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kodeBarangTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_kodeBarangTFCaretUpdate
        try {
            Connection c=ClassDatabase.getkoneksi();
            Statement s=c.createStatement();
            String sql="SELECT * FROM barang WHERE kode_barang='" + this.kodeBarangTF.getText() + "'";
            ResultSet r=s.executeQuery(sql);
            while (r.next()) {
                this.namaBarangTF.setText(r.getString(2));
                this.hargaBeliTF.setText(r.getString(3));
                this.hargaJualTF.setText(r.getString(4));
                this.totalStokTF.setText(r.getString(5));
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            System.out.println("Terjadi kesalahan" + e);
        }
    }//GEN-LAST:event_kodeBarangTFCaretUpdate

    private void addBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTActionPerformed
        noBeliTF.setText("");
        kodeBarangTF.setText("");
        namaBarangTF.setText("");
        hargaBeliTF.setText("");
        hargaJualTF.setText("");
        totalStokTF.setText("");
        jumlahBeliTF.setText("");
        tglBeliTF.setDate(null);
        kodeSupplierTF.setText("");
        namaSupplierTF.setText("");
        tampilkanTF.setText("");
        noBeliTF.requestFocus();
    }//GEN-LAST:event_addBTActionPerformed

    private void saveBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBTActionPerformed
    int id = 0, saham1 = 0;
        java.util.Date tgl_beli=(java.util.Date) this.tglBeliTF.getDate();
        String no_beli=this.noBeliTF.getText();
        String kodebar=this.kodeBarangTF.getText();
        String kodesup=this.kodeSupplierTF.getText();
        int stok1=Integer.parseInt(totalStokTF.getText());
        int j_beli1=Integer.parseInt(jumlahBeliTF.getText());
        int h_beli1=Integer.parseInt(hargaBeliTF.getText());
        
        stok1 = stok1+j_beli1;
        
        saham1 = stok1*h_beli1;
        
        String h_beli=this.hargaBeliTF.getText();
        totalStokTF.setText(Integer.toString(stok1));
        jumlahBeliTF.setText(Integer.toString(j_beli1));
        String saham = Integer.toString(saham1);
        
        String stok=this.totalStokTF.getText();
        String j_beli=this.jumlahBeliTF.getText();
        
        if (noBeliTF.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Nomor Pembelian Tidak Boleh Kosong");
        }
        else{
            if (kodeBarangTF.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Kode Barang Tidak Boleh Kosong");
            }
            else {
                if (jumlahBeliTF.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Jumlah Pembelian Tidak Boleh Kosong");
                }
                else {
                    if (kodeSupplierTF.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Kode Supplier Tidak Boleh Kosong");
                    }
                        else {
                            try {
                                Connection c = ClassDatabase.getkoneksi();
                                String sql = "INSERT INTO acc VALUES (?,?,?,?,?,?)";
                                PreparedStatement p =(PreparedStatement) c.prepareStatement(sql);
                                p.setInt(1, id);
                                p.setString(2, no_beli);
                                p.setString(3, kodebar);
                                p.setString(4, j_beli);
                                p.setDate(5, new java.sql.Date(tgl_beli.getTime()));
                                p.setString(6, kodesup);
                                p.executeUpdate();
                                p.close();
                                JOptionPane.showMessageDialog(this, "Sukses Tambah Data");
                            } catch (Exception e) {
                                System.out.println(e);
                            } finally {
                                DefaultTableModel tbltampil = new DefaultTableModel();
                                tbltampil.addColumn("ID");
                                tbltampil.addColumn("No. Beli");
                                tbltampil.addColumn("Kode Barang");
                                tbltampil.addColumn("Jumlah Beli");
                                tbltampil.addColumn("Tanggal Beli");
                                tbltampil.addColumn("Kode Supplier");
                            
                            try {
                                Connection c=ClassDatabase.getkoneksi();
                                Statement s=c.createStatement();
                                String sql="SELECT * FROM acc";
                                ResultSet r=s.executeQuery(sql);
                                while (r.next()) {
                                tbltampil.addRow(new Object[] {
                                r.getString(1),
                                r.getString(2),
                                r.getString(3),
                                r.getString(4),
                                r.getString(5),
                                r.getString(6)
                                });
                            }
                                tblAcc.setModel(tbltampil);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);
                            }
                            }
                                try {
                                    Connection c=ClassDatabase.getkoneksi();
                                    String sql ="UPDATE `rauf`.`barang` SET `stok`=?, `saham`=? WHERE kode_barang=?";
                                    PreparedStatement p=(PreparedStatement) c.prepareStatement(sql);
                                    p.setString(3, kodebar);
                                    p.setString(1, stok);
                                    p.setString(2, saham);
                                    p.executeUpdate();
                                    p.close();
                                } catch (Exception e) {
                                    System.out.println(e);
                                }
                    }
                }
            }
        }                         
    }//GEN-LAST:event_saveBTActionPerformed

    private void editBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBTActionPerformed
        //EDIT
        int stokdb = 0, stokpanel = 0, saham1 = 0;
        
        try {
            Connection c =ClassDatabase.getkoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT j_beli FROM acc where no_beli = '" + noBeliTF.getText() + "'";
            ResultSet r = s.executeQuery(sql);
            while (r.next()) {
                stokdb = (r.getInt("j_beli"));
                
            }
            r.close();
            s.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        
        java.util.Date tgl_beli=(java.util.Date) this.tglBeliTF.getDate();
        String no_beli=this.noBeliTF.getText();
        String jumlah_beli=jumlahBeliTF.getText();
        String kodebar=this.kodeBarangTF.getText();
        String kodesup=this.kodeSupplierTF.getText();
        int stok1=Integer.parseInt(totalStokTF.getText());
        int j_beli1=Integer.parseInt(jumlahBeliTF.getText());
        int h_beli1=Integer.parseInt(hargaBeliTF.getText());
        
        //stoka1 = stoka1+j_beli1;
        
        //saham1 = stoka1*h_belia1;
        
        int jumlah_beli1 = 0;
        stokpanel = Integer.parseInt(jumlahBeliTF.getText());
        
        if (noBeliTF.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Nomor Pembelian Tidak Boleh Kosong");
        }
        else {
            if (kodeBarangTF.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Kode Barang Tidak Boleh Kosong");
            }
            else {
                if (jumlahBeliTF.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Jumlah Beli Tidak Boleh Kosong");
                }
                else {
                    if (kodeSupplierTF.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(this, "Data Belum Lengkap, Kode Supplier Tidak Boleh Kosong");
                    }
                    else {
                            try {
                                Connection c=ClassDatabase.getkoneksi();
                                String sql="UPDATE `rauf`.`acc` SET `no_beli`=?,`kodea`=?,`j_beli`=?,`tgl_beli`=?,`kodesup`=? WHERE `no_beli`=?";
                                PreparedStatement p=(PreparedStatement) c.prepareStatement(sql);
                                p.setString(6, no_beli);
                                p.setString(1, no_beli);
                                p.setString(2, kodebar);
                                p.setString(3, jumlah_beli);
                                p.setDate(4, new java.sql.Date(tgl_beli.getTime()));
                                p.setString(5, kodesup);
                                p.executeUpdate();
                                p.close();
                                JOptionPane.showMessageDialog(this, "Sukses Update Data");
                            } catch (SQLException e) {
                                System.out.println(e);
                            } finally{
                                DefaultTableModel tbltampil = new DefaultTableModel();
                                tbltampil.addColumn("ID");
                                tbltampil.addColumn("No. Beli");
                                tbltampil.addColumn("Kode Barang");
                                tbltampil.addColumn("Jumlah Beli");
                                tbltampil.addColumn("Tanggal Beli");
                                tbltampil.addColumn("Kode Supplier");
                            
                            try {
                                Connection c=ClassDatabase.getkoneksi();
                                Statement s=c.createStatement();
                                String sql="SELECT * FROM acc";
                                ResultSet r=s.executeQuery(sql);
                                while (r.next()) {
                                tbltampil.addRow(new Object[] {
                                r.getString(1),
                                r.getString(2),
                                r.getString(3),
                                r.getString(4),
                                r.getString(5),
                                r.getString(6)
                                });
                            }
                                tblAcc.setModel(tbltampil);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog( null, e);
                                }
                            }
                            
                            int stok2 = 0;
                            int saham2 = 0;
                            int jumlah_beli2 = 0;
                            
                            if (stokdb > stokpanel) {
                                jumlah_beli1 = stokdb - stokpanel;
                                stok1 -= jumlah_beli1;
                                saham1 = (stok1 + jumlah_beli1) * h_beli1;
                                
                            } else if (stokdb < stokpanel){
                                jumlah_beli1 = stokpanel - stokdb;
                                stok1 += jumlah_beli1;
                                saham1 = (stok1 + jumlah_beli1) * h_beli1;
                            }
                            
                            stok2 = stok1;
                            jumlah_beli2 = jumlah_beli1;
                            stok2 -=jumlah_beli2;
                            saham2 = (stok2 + jumlah_beli2) * h_beli1;
                            
                            try {
                                    Connection c=ClassDatabase.getkoneksi();
                                    String sql ="UPDATE `rauf`.`barang` SET `stok`=?, `saham`=? WHERE kode_barang=?";
                                    PreparedStatement p=(PreparedStatement) c.prepareStatement(sql);
                                    p.setString(3, kodebar);
                                    p.setInt(1, stok1);
                                    p.setInt(2, saham2);
                                    p.executeUpdate();
                                    p.close();
                                } catch (Exception e) {
                                    System.out.println(e);
                                }
                                }
                }
            }
        }
    }//GEN-LAST:event_editBTActionPerformed

    private void deleteBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTActionPerformed
        //DELETE
        int saham = 0;
        int del_stok = 0;
        String no_beli=this.noBeliTF.getText();
        String kodebar=this.kodeBarangTF.getText();
        int total_stok=Integer.parseInt(this.totalStokTF.getText());
        int stoka1=Integer.parseInt(totalStokTF.getText());
        int h_belia1=Integer.parseInt(hargaBeliTF.getText());
        int jumlah_beli=Integer.parseInt(jumlahBeliTF.getText());
        
        del_stok = total_stok - jumlah_beli;
        saham = (del_stok) * h_belia1;

        try {
            Connection c=ClassDatabase.getkoneksi();
            String sql = "DELETE FROM acc WHERE no_beli=?";
            PreparedStatement p=(PreparedStatement) c.prepareStatement(sql);
            p.setString(1, no_beli);

            p.executeUpdate();
            p.close();
            JOptionPane.showMessageDialog(this, "Sukses Hapus Data");
        } catch (SQLException e) {
            System.out.println(e);
        }  finally {
            DefaultTableModel tbltampil = new DefaultTableModel();
            tbltampil.addColumn("ID");
            tbltampil.addColumn("No. Beli");
            tbltampil.addColumn("Kode Barang");
            tbltampil.addColumn("Jumlah Beli");
            tbltampil.addColumn("Tanggal Beli");
            tbltampil.addColumn("Kode Supplier");
            
        try {
            Connection c=ClassDatabase.getkoneksi();
            Statement s=c.createStatement();
            String sql="SELECT * FROM acc";
            ResultSet r=s.executeQuery(sql);
            while (r.next()) {
                tbltampil.addRow(new Object[] {
                r.getString(1),
                r.getString(2),
                r.getString(3),
                r.getString(4),
                r.getString(5),
                r.getString(6)
            });
            }
            tblAcc.setModel(tbltampil);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        try {
            Connection c=ClassDatabase.getkoneksi();
            String sql ="UPDATE `rauf`.`barang` SET `stok`=?, `saham`=? WHERE kode_barang=?";
            PreparedStatement p=(PreparedStatement) c.prepareStatement(sql);
            p.setString(3, kodebar);
            p.setInt(1, del_stok);
            p.setInt(2, saham);
            p.executeUpdate();
            p.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_deleteBTActionPerformed

    private void closeBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBTActionPerformed
        int ex = JOptionPane.showConfirmDialog(null, "Apakah anda akan keluar?", "Anda yakin?", JOptionPane.YES_NO_OPTION);
        if (ex == 0){
            dispose();
        }
    }//GEN-LAST:event_closeBTActionPerformed

    private void kodeSupplierTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_kodeSupplierTFCaretUpdate
        try {
            Connection c=ClassDatabase.getkoneksi();
            Statement s=c.createStatement();
            String sql="SELECT * FROM supplier WHERE kode_supplier='" + this.kodeSupplierTF.getText() + "'";
            ResultSet r=s.executeQuery(sql);
            while (r.next()) {
                this.namaSupplierTF.setText(r.getString(2));
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            System.out.println("Terjadi kesalahan" + e);
        }
    }//GEN-LAST:event_kodeSupplierTFCaretUpdate

    private void noBeliTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_noBeliTFCaretUpdate
        try {
            Connection c=ClassDatabase.getkoneksi();
            Statement s=c.createStatement();
            String sql="SELECT * FROM acc WHERE no_beli='" + this.noBeliTF.getText() + "'";
            ResultSet r=s.executeQuery(sql);
            while (r.next()) {
                this.kodeBarangTF.setText(r.getString(3));
                this.jumlahBeliTF.setText(r.getString(4));
                this.tglBeliTF.setDate(r.getDate(5));
                this.kodeSupplierTF.setText(r.getString(6));
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            System.out.println("Terjadi kesalahan" + e);
        }
    }//GEN-LAST:event_noBeliTFCaretUpdate

    private void caridataBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caridataBTActionPerformed
        DefaultTableModel tbltampil = new DefaultTableModel();
            
            tbltampil.addColumn("ID");
            tbltampil.addColumn("No. Beli");
            tbltampil.addColumn("Kode Barang");
            tbltampil.addColumn("Jumlah Beli");
            tbltampil.addColumn("Tanggal Beli");
            tbltampil.addColumn("Kode Supplier");
            
        try {
            Connection c=ClassDatabase.getkoneksi();
            Statement s=c.createStatement();
            String sql = "SELECT * FROM acc WHERE no_beli LIKE '%" + tampilkanTF.getText() + "%'" +
            "OR kodea LIKE '%" + tampilkanTF.getText() + "%'";
            ResultSet r=s.executeQuery(sql);
            while (r.next()) {
                tbltampil.addRow(new Object[] {
                    r.getString(1),
                    r.getString(2),
                    r.getString(3),
                    r.getString(4),
                    r.getString(5),
                    r.getString(6)
                });}
                tblAcc.setModel(tbltampil);
            } catch (Exception e) {
                System.out.println(e);
            }
    }//GEN-LAST:event_caridataBTActionPerformed

    private void tampilkanTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tampilkanTFKeyPressed
        DefaultTableModel tbltampil = new DefaultTableModel();
            
            tbltampil.addColumn("ID");
            tbltampil.addColumn("No. Beli");
            tbltampil.addColumn("Kode Barang");
            tbltampil.addColumn("Jumlah Beli");
            tbltampil.addColumn("Tanggal Beli");
            tbltampil.addColumn("Kode Supplier");
            
        try {
            Connection c=ClassDatabase.getkoneksi();
            Statement s=c.createStatement();
            String sql = "SELECT * FROM acc WHERE no_beli LIKE '%" + tampilkanTF.getText() + "%'" +
            "OR kodea LIKE '%" + tampilkanTF.getText() + "%'";
            ResultSet r=s.executeQuery(sql);
            while (r.next()) {
                tbltampil.addRow(new Object[] {
                    r.getString(1),
                    r.getString(2),
                    r.getString(3),
                    r.getString(4),
                    r.getString(5),
                    r.getString(6)
                });}
                tblAcc.setModel(tbltampil);
            } catch (Exception e) {
                System.out.println(e);
            }
    }//GEN-LAST:event_tampilkanTFKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDTF;
    private javax.swing.JButton addBT;
    private javax.swing.JButton caridataBT;
    private javax.swing.JButton closeBT;
    private javax.swing.JButton deleteBT;
    private javax.swing.JButton editBT;
    private javax.swing.JTextField hargaBeliTF;
    private javax.swing.JTextField hargaJualTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jumlahBeliTF;
    private javax.swing.JTextField kodeBarangTF;
    private javax.swing.JTextField kodeSupplierTF;
    private javax.swing.JTextField namaBarangTF;
    private javax.swing.JTextField namaSupplierTF;
    private javax.swing.JTextField noBeliTF;
    private javax.swing.JButton saveBT;
    private javax.swing.JTextField tampilkanTF;
    private javax.swing.JTable tblAcc;
    private com.toedter.calendar.JDateChooser tglBeliTF;
    private javax.swing.JTextField totalStokTF;
    // End of variables declaration//GEN-END:variables
}
